#version 450
#extension GL_EXT_scalar_block_layout : enable

const uint GROUPS_PER_AXIS = 100;

layout (binding = 0, std430) readonly uniform Input {
    uint samplesPerGroup;
} inputBuffer;

layout (binding = 1, std430) writeonly buffer Output {
    uint positiveSamples[GROUPS_PER_AXIS * GROUPS_PER_AXIS];
} outputBuffer;

layout (local_size_x = 16, local_size_y = 16, local_size_z = 1) in ;

void main() {
    uint positiveSamples = 0;

    for (uint x = 0; x < inputBuffer.samplesPerGroup; x++) {
        for (uint y = 0; y < inputBuffer.samplesPerGroup; y++) {
            const vec2 offset = vec2(x, y) / inputBuffer.samplesPerGroup;
            vec2 pos = (gl_GlobalInvocationID.xy + offset) / (GROUPS_PER_AXIS * 16);

            if (pos.x * pos.x + pos.y * pos.y <= 1) {
                positiveSamples++;
            }
        }
    }

    atomicAdd(outputBuffer.positiveSamples[gl_WorkGroupID.y * GROUPS_PER_AXIS + gl_WorkGroupID.x], positiveSamples);
}
